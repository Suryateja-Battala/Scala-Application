/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Scala application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.4/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the scala Plugin to add support for Scala.
    id 'scala'

    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    //id "com.github.maiflai.scalatest" version "0.32"
    //id 'com.typesafe.sbt.SbtScalariform' // Add Scala formatter plugin
    // id 'org.scalatest' version '3.2.9' // Add ScalaTest plugin
    // id "io.github.ysohda.scalatest" version "0.32.1"

}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use Scala 2.13 in our library project
    implementation 'org.scala-lang:scala-library:2.13.11'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:32.1.1-jre'

    // Use Scalatest for testing our library
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.scalatest:scalatest_2.13:3.2.16'
    testImplementation 'org.scalatestplus:junit-4-13_2.13:3.2.2.0'

    // Need scala-xml at test runtime
    testRuntimeOnly 'org.scala-lang.modules:scala-xml_2.13:1.2.0'
    implementation 'com.typesafe:config:1.4.2'
    // https://mvnrepository.com/artifact/mysql/mysql-connector-java
    //implementation 'mysql:mysql-connector-java:8.0.33'
// https://mvnrepository.com/artifact/org.apache.poi/poi
    implementation 'org.apache.poi:poi:5.2.4'
    implementation 'org.apache.poi:poi-ooxml:5.2.4'

// https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core
    implementation 'org.apache.logging.log4j:log4j-core:2.20.0'
// https://mvnrepository.com/artifact/com.microsoft.sqlserver/mssql-jdbc
    implementation 'com.microsoft.sqlserver:mssql-jdbc:12.4.1.jre11'

    // https://mvnrepository.com/artifact/com.h2database/h2
    implementation 'com.h2database:h2:1.4.200'

//    testCompile 'com.h2database:h2:1.4.200'

    //classpath "gradle.plugin.com.github.maiflai:gradle-scalatest:0.32"
    implementation 'com.vladsch.flexmark:flexmark-all:0.62.2'

    implementation 'com.jsuereth:scala-arm_2.11:2.0'
    // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
    testImplementation 'ch.qos.logback:logback-classic:1.4.11'
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-log4j12
    testImplementation 'org.slf4j:slf4j-log4j12:2.0.9'
    // https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-jar-plugin
    implementation 'org.apache.maven.plugins:maven-jar-plugin:3.3.0'

}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

application{
    mainClass = 'FirstTask.WriteDataToExcel'
}

test {
    testClassesDirs = sourceSets.test.output.classesDirs

    test {
        useJUnit()
        include 'FirstTask.AppSuite'
        testLogging {
            showStandardStreams = true
        }
    }
    test {
        systemProperty 'config.file', 'src/test/resources/applicationTest.conf'
    }

}
jar.enabled = false
tasks.register('customJar', Jar) {
    archiveFileName = 'employeeFats.jar'  // Set the desired JAR file name
    manifest {
        attributes 'Main-Class': application.mainClass
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    exclude 'META-INF/*.SF'
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
    with jar
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE  // Set the duplicatesStrategy to exclude duplicates
}
