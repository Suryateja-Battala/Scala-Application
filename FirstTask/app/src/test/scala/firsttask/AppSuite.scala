/*
 * This Scala Testsuite was generated by the Gradle 'init' task.
 */
package FirstTask

import org.scalatest.flatspec.AnyFlatSpec
import org.scalatest.matchers.should.Matchers

import java.io.{File, FileOutputStream}
import com.typesafe.config.{Config, ConfigFactory}
import FirstTask.ExcelOperations.jdbc
import org.apache.poi.hssf.usermodel.HSSFWorkbook

import java.sql.{PreparedStatement, ResultSet}
//import employee.MethodDbTask.jdbc
import org.junit.{Assert, Test}

import java.sql.{Connection, DriverManager,Statement}

/*
class unitTesting {
  @org.junit.Test
  def test1(): Unit = {

    val config = ConfigFactory.load("applicationTest.conf")
    val jdbc = config.getConfig("jdbc")

    val expected: String = "C:\\Surya_Task\\Test.xlsx"
    val actual: String = jdbc.getString("excelFilePath")

    Assert.assertEquals(expected, actual)
  }
@org.junit.Test
  def test2(): Unit = {

    val config = ConfigFactory.load()
    val jdbc = config.getConfig("jdbc")

    val expected1: String = "sa"
    val actual1: String = jdbc.getString("user")

    Assert.assertEquals(expected1, actual1)

  }
}
*/

class AppSuite extends AnyFlatSpec with Matchers {
  "Config file" should "match the expected path" in {
    val config: Config = ConfigFactory.load("applicationTest.conf")

    val jdbc = config.getConfig("jdbc")
    val connection: Connection = DriverManager.getConnection(jdbc.getString("url"), jdbc.getString("user"), jdbc.getString("password"))
    println("Connected to H2 in-memory database.")

    val createTableSql = "CREATE TABLE students (ID INT, Name VARCHAR(50),Location varchar(50))"
    val statement = connection.createStatement()
    statement.execute(createTableSql)
    println("Created table students.")

    val insertSql = "INSERT INTO students (ID, Name,Location) VALUES (?,?,?)"
    val insertStatement: PreparedStatement = connection.prepareStatement(insertSql)
    insertStatement.setInt(1, 1)
    insertStatement.setString(2, "tej")
    insertStatement.setString(3, "Kphb")
    insertStatement.executeUpdate()
    println("Data inserted into the table.")

    val resultSet: ResultSet = statement.executeQuery("SELECT * FROM students")
    println(resultSet)

    ExcelOperations.operationMethod(jdbc)

    val expected: String = "C:\\Surya_Task\\Test.xlsx"
    assert(expected == "C:\\Surya_Task\\Test.xlsx")

  }
}
